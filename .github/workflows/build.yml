name: Bookworm Chroma Server Image

on:
  workflow_dispatch:
    inputs:
      chroma_version:
        description: 'Chroma version to use for the image'
        required: true
        default: '0.6.3'
      latest:
        description: 'Whether to use the latest tag'
        required: false
        default: 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        base: ["bookworm", "alpine"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout Chroma repository
        uses: actions/checkout@v4
        with:
          repository: chroma-core/chroma
          path: chroma
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
          ref: ${{ inputs.chroma_version }}

      - name: Configure
        run: |
          set -e
          cp common/log_config.yaml chroma/log_config.yaml
          cp common/docker_entrypoint.sh chroma/docker_entrypoint.sh
          rm -rf chroma/chromadb/utils/embedding_functions
          cp common/embedding_functions.py chroma/chromadb/utils/embedding_functions.py
          cp common/.dockerignore chroma/.dockerignore
          cp Dockerfile.${{ matrix.base }} chroma/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{chroma_version}}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 